https://blog.naver.com/bitelab/221416760311


#include "SparkFun_ADXL345.h"

ADXL345 adxl = ADXL345();    // USE FOR SPI COMMUNICATION, ADXL345(chipSelectPin);
int x,y,z;                     // Variable used to store accelerometer data

void setup(){                  // The setup Program runs one time at power up or after reset
  Serial.begin(9600);          // Start the serial terminal with a baudRate of 9600
  adxl.powerOn();              // Power on the ADXL345

  adxl.setRangeSetting(4);     // Range settings 2g(highest sensetivity), 4g, 8g or 16g(lowest sensetivity)
  adxl.setSpiBit(0);           // Configure the device to be in 4 wire SPI mode
}
void loop(){                   // The loop program follows the setup program and repeats forever
  adxl.readAccel(&x, &y, &z);  // Read the accelerometer values and store them in x, y, and z
  sendAccelToProcessing();     // Send the x, y, and z values to the dbBoardsAdxlGraphP.pde to be displayed
  delay(100);                   // Give the Processing program time to parse and graph the data
}

void sendAccelToProcessing(){  // Send the x, y, and z values to the dbBoardsAdxlGraphP.pde to be displayed
  Serial.print("\nx ");           // Tell the Proccessing sketch it is about to recieve an x value
  Serial.print(x);             // Send the x value to dbBoardsAdxlGraphP.pde
  Serial.print(" y ");           // Tell the Proccessing sketch it is about to recieve an y value
  Serial.print(y);             // Send the y value to dbBoardsAdxlGraphP.pde
  Serial.print(" z ");           // Tell the Proccessing sketch it is about to recieve an z value
  Serial.print(z);             // Send the z value to dbBoardsAdxlGraphP.pde

  unsigned long active_value = 0;
  int gx, gy, gz;
  gx = x-3;
  gy = y-2;
  gz = z-119;

  active_value = active_value + abs(gx) + abs(gy) + abs(gz);
  if ( active_value> 50 )
  {
    Serial.print("\n Active : ");
    Serial.print(active_value);
  }
}

-----------------------------------------------------------
#include "SparkFun_ADXL345.h"

ADXL345 adxl = ADXL345();    // USE FOR SPI COMMUNICATION, ADXL345(chipSelectPin);
int x,y,z;                     // Variable used to store accelerometer data

void setup(){                  // The setup Program runs one time at power up or after reset
  Serial.begin(9600);          // Start the serial terminal with a baudRate of 9600
  adxl.powerOn();              // Power on the ADXL345

  adxl.setRangeSetting(4);     // Range settings 2g(highest sensetivity), 4g, 8g or 16g(lowest sensetivity)
  adxl.setSpiBit(0);           // Configure the device to be in 4 wire SPI mode
}
void loop(){                   // The loop program follows the setup program and repeats forever
  adxl.readAccel(&x, &y, &z);  // Read the accelerometer values and store them in x, y, and z
  sendAccelToProcessing();     // Send the x, y, and z values to the dbBoardsAdxlGraphP.pde to be displayed
  delay(100);                   // Give the Processing program time to parse and graph the data
}

void sendAccelToProcessing(){  // Send the x, y, and z values to the dbBoardsAdxlGraphP.pde to be displayed

  unsigned long active_value = 0;
  int gx, gy, gz;
  gx = x-3;
  gy = y-2;
  gz = z-119;

  active_value = active_value + abs(gx) + abs(gy) + abs(gz);
  if ( active_value> 500 )
  {
    Serial.print("\n Active : ");
    Serial.print(active_value);
  }
}



